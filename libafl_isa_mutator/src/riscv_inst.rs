/* Automatically generated by parse_opcodes */
pub struct Instructions {
}

impl Instructions {

    pub fn is_valid(inst: u32) -> (bool, u32, u32, &'static str, &'static str, u32, Vec<u32>) {
        let masks = Instructions::get_masks();

        for mask in masks {

            if (mask.2 & inst)  == mask.1 {
                // println!("Match using mask {:x} for input {:x}", mask.1, inst);

                return (true, mask.2, mask.1, mask.0, mask.3, mask.5, mask.4);
            }
        }

        return (false, 0, 0, "", "", 0, vec![]);
    }

    pub fn get_masks() -> Vec::<(&'static str, u32, u32, &'static str, Vec<u32>,u32)> {

return vec![("ADD", 0x33, 0xfe00707f, "0000000??????????000?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("ADDI", 0x13, 0x707f, "?????????????????000?????0010011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("ADDIW", 0x1b, 0x707f, "?????????????????000?????0011011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("ADDW", 0x3b, 0xfe00707f, "0000000??????????000?????0111011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("AND", 0x7033, 0xfe00707f, "0000000??????????111?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("ANDI", 0x7013, 0x707f, "?????????????????111?????0010011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("ANDN", 0x40007033, 0xfe00707f, "0100000??????????111?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("AUIPC", 0x17, 0x7f, "?????????????????????????0010111", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24] ,1),
("BCLR", 0x48001033, 0xfe00707f, "0100100??????????001?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("BEQ", 0x63, 0x707f, "?????????????????000?????1100011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("BEXT", 0x48005033, 0xfe00707f, "0100100??????????101?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("BGE", 0x5063, 0x707f, "?????????????????101?????1100011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("BGEU", 0x7063, 0x707f, "?????????????????111?????1100011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("BINV", 0x68001033, 0xfe00707f, "0110100??????????001?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("BLT", 0x4063, 0x707f, "?????????????????100?????1100011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("BLTU", 0x6063, 0x707f, "?????????????????110?????1100011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("BNE", 0x1063, 0x707f, "?????????????????001?????1100011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("BSET", 0x28001033, 0xfe00707f, "0010100??????????001?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("C_ADD", 0x9002, 0xf003, "????????????????1001??????????10", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,26,27,28,29] ,1),
("C_ADDI", 0x1, 0xe003, "????????????????000???????????01", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,26,27,28,29] ,1),
("C_ADDI16SP", 0x6101, 0xef83, "????????????????011?00010?????01", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,25,26,27,28,29] ,1),
// ("C_ADDI4SPN", 0x0, 0xe003, "????????????????000???????????00", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,26,27,28,29] ,1),
("C_ADDIW", 0x2001, 0xe003, "????????????????001???????????01", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,26,27,28,29] ,1),
("C_ADDW", 0x9c21, 0xfc63, "????????????????100111???01???01", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,22,23,24,27,28,29] ,1),
("C_AND", 0x8c61, 0xfc63, "????????????????100011???11???01", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,22,23,24,27,28,29] ,1),
("C_ANDI", 0x8801, 0xec03, "????????????????100?10????????01", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,22,23,24,25,26,27,28,29] ,1),
("C_BEQZ", 0xc001, 0xe003, "????????????????110???????????01", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,26,27,28,29] ,1),
("C_BNEZ", 0xe001, 0xe003, "????????????????111???????????01", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,26,27,28,29] ,1),
("C_EBREAK", 0x9002, 0xffff, "????????????????1001000000000010", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15] ,1),
("C_J", 0xa001, 0xe003, "????????????????101???????????01", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,26,27,28,29] ,1),
("C_JAL", 0x2001, 0xe003, "????????????????001???????????01", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,26,27,28,29] ,1),
("C_JALR", 0x9002, 0xf07f, "????????????????1001?????0000010", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24] ,1),
("C_JR", 0x8002, 0xf07f, "????????????????1000?????0000010", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24] ,1),
("C_LD", 0x6000, 0xe003, "????????????????011???????????00", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,26,27,28,29] ,1),
("C_LDSP", 0x6002, 0xe003, "????????????????011???????????10", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,26,27,28,29] ,1),
("C_LI", 0x4001, 0xe003, "????????????????010???????????01", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,26,27,28,29] ,1),
("C_LUI", 0x6001, 0xe003, "????????????????011???????????01", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,26,27,28,29] ,1),
("C_LW", 0x4000, 0xe003, "????????????????010???????????00", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,26,27,28,29] ,1),
("C_LWSP", 0x4002, 0xe003, "????????????????010???????????10", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,26,27,28,29] ,1),
("C_MV", 0x8002, 0xf003, "????????????????1000??????????10", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,26,27,28,29] ,1),
("C_NOP", 0x1, 0xef83, "????????????????000?00000?????01", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,25,26,27,28,29] ,1),
("C_OR", 0x8c41, 0xfc63, "????????????????100011???10???01", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,22,23,24,27,28,29] ,1),
("C_SD", 0xe000, 0xe003, "????????????????111???????????00", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,26,27,28,29] ,1),
("C_SDSP", 0xe002, 0xe003, "????????????????111???????????10", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,26,27,28,29] ,1),
("C_SLLI", 0x2, 0xe003, "????????????????000???????????10", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,26,27,28,29] ,1),
("C_SRAI", 0x8401, 0xec03, "????????????????100?01????????01", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,22,23,24,25,26,27,28,29] ,1),
("C_SRLI", 0x8001, 0xec03, "????????????????100?00????????01", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,22,23,24,25,26,27,28,29] ,1),
("C_SUB", 0x8c01, 0xfc63, "????????????????100011???00???01", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,22,23,24,27,28,29] ,1),
("C_SUBW", 0x9c01, 0xfc63, "????????????????100111???00???01", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,22,23,24,27,28,29] ,1),
("C_SW", 0xc000, 0xe003, "????????????????110???????????00", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,26,27,28,29] ,1),
("C_SWSP", 0xc002, 0xe003, "????????????????110???????????10", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,26,27,28,29] ,1),
("C_XOR", 0x8c21, 0xfc63, "????????????????100011???01???01", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,22,23,24,27,28,29] ,1),
("CLZ", 0x60001013, 0xfff0707f, "011000000000?????001?????0010011", vec![12,13,14,15,16,20,21,22,23,24] ,1),
("CPOP", 0x60201013, 0xfff0707f, "011000000010?????001?????0010011", vec![12,13,14,15,16,20,21,22,23,24] ,1),
("CSRRC", 0x3073, 0x707f, "?????????????????011?????1110011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("CSRRCI", 0x7073, 0x707f, "?????????????????111?????1110011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("CSRRS", 0x2073, 0x707f, "?????????????????010?????1110011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("CSRRSI", 0x6073, 0x707f, "?????????????????110?????1110011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("CSRRW", 0x1073, 0x707f, "?????????????????001?????1110011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("CSRRWI", 0x5073, 0x707f, "?????????????????101?????1110011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("CTZ", 0x60101013, 0xfff0707f, "011000000001?????001?????0010011", vec![12,13,14,15,16,20,21,22,23,24] ,1),
("DIV", 0x2004033, 0xfe00707f, "0000001??????????100?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("DIVU", 0x2005033, 0xfe00707f, "0000001??????????101?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("DIVUW", 0x200503b, 0xfe00707f, "0000001??????????101?????0111011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("DIVW", 0x200403b, 0xfe00707f, "0000001??????????100?????0111011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("EBREAK", 0x100073, 0xffffffff, "00000000000100000000000001110011", vec![] ,1),
("ECALL", 0x73, 0xffffffff, "00000000000000000000000001110011", vec![] ,1),
("FENCE", 0xf, 0x707f, "?????????????????000?????0001111", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("FENCE_I", 0x100f, 0x707f, "?????????????????001?????0001111", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("FENCE_TSO", 0x8330000f, 0xfff0707f, "100000110011?????000?????0001111", vec![12,13,14,15,16,20,21,22,23,24] ,1),
("FRCSR", 0x302073, 0xfffff07f, "00000000001100000010?????1110011", vec![20,21,22,23,24] ,1),
("FRFLAGS", 0x102073, 0xfffff07f, "00000000000100000010?????1110011", vec![20,21,22,23,24] ,1),
("FRRM", 0x202073, 0xfffff07f, "00000000001000000010?????1110011", vec![20,21,22,23,24] ,1),
("FSCSR", 0x301073, 0xfff0707f, "000000000011?????001?????1110011", vec![12,13,14,15,16,20,21,22,23,24] ,1),
("FSFLAGS", 0x101073, 0xfff0707f, "000000000001?????001?????1110011", vec![12,13,14,15,16,20,21,22,23,24] ,1),
("FSFLAGSI", 0x105073, 0xfff0707f, "000000000001?????101?????1110011", vec![12,13,14,15,16,20,21,22,23,24] ,1),
("FSRM", 0x201073, 0xfff0707f, "000000000010?????001?????1110011", vec![12,13,14,15,16,20,21,22,23,24] ,1),
("FSRMI", 0x205073, 0xfff0707f, "000000000010?????101?????1110011", vec![12,13,14,15,16,20,21,22,23,24] ,1),
("JAL", 0x6f, 0x7f, "?????????????????????????1101111", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24] ,1),
("JALR", 0x67, 0x707f, "?????????????????000?????1100111", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("LB", 0x3, 0x707f, "?????????????????000?????0000011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("LBU", 0x4003, 0x707f, "?????????????????100?????0000011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("LD", 0x3003, 0x707f, "?????????????????011?????0000011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("LH", 0x1003, 0x707f, "?????????????????001?????0000011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("LHU", 0x5003, 0x707f, "?????????????????101?????0000011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("LUI", 0x37, 0x7f, "?????????????????????????0110111", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24] ,1),
("LW", 0x2003, 0x707f, "?????????????????010?????0000011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("LWU", 0x6003, 0x707f, "?????????????????110?????0000011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("MAX", 0xa006033, 0xfe00707f, "0000101??????????110?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("MAXU", 0xa007033, 0xfe00707f, "0000101??????????111?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("MIN", 0xa004033, 0xfe00707f, "0000101??????????100?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("MINU", 0xa005033, 0xfe00707f, "0000101??????????101?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("MUL", 0x2000033, 0xfe00707f, "0000001??????????000?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("MULH", 0x2001033, 0xfe00707f, "0000001??????????001?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("MULHSU", 0x2002033, 0xfe00707f, "0000001??????????010?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("MULHU", 0x2003033, 0xfe00707f, "0000001??????????011?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("MULW", 0x200003b, 0xfe00707f, "0000001??????????000?????0111011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("OR", 0x6033, 0xfe00707f, "0000000??????????110?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("ORC_B", 0x28705013, 0xfff0707f, "001010000111?????101?????0010011", vec![12,13,14,15,16,20,21,22,23,24] ,1),
("ORI", 0x6013, 0x707f, "?????????????????110?????0010011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("ORN", 0x40006033, 0xfe00707f, "0100000??????????110?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("PAUSE", 0x100000f, 0xffffffff, "00000001000000000000000000001111", vec![] ,1),
("RDCYCLE", 0xc0002073, 0xfffff07f, "11000000000000000010?????1110011", vec![20,21,22,23,24] ,1),
("RDCYCLEH", 0xc8002073, 0xfffff07f, "11001000000000000010?????1110011", vec![20,21,22,23,24] ,1),
("RDINSTRET", 0xc0202073, 0xfffff07f, "11000000001000000010?????1110011", vec![20,21,22,23,24] ,1),
("RDINSTRETH", 0xc8202073, 0xfffff07f, "11001000001000000010?????1110011", vec![20,21,22,23,24] ,1),
("RDTIME", 0xc0102073, 0xfffff07f, "11000000000100000010?????1110011", vec![20,21,22,23,24] ,1),
("RDTIMEH", 0xc8102073, 0xfffff07f, "11001000000100000010?????1110011", vec![20,21,22,23,24] ,1),
("REM", 0x2006033, 0xfe00707f, "0000001??????????110?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("REMU", 0x2007033, 0xfe00707f, "0000001??????????111?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("REMUW", 0x200703b, 0xfe00707f, "0000001??????????111?????0111011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("REMW", 0x200603b, 0xfe00707f, "0000001??????????110?????0111011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("ROL", 0x60001033, 0xfe00707f, "0110000??????????001?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("ROR", 0x60005033, 0xfe00707f, "0110000??????????101?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SB", 0x23, 0x707f, "?????????????????000?????0100011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SBREAK", 0x100073, 0xffffffff, "00000000000100000000000001110011", vec![] ,1),
("SCALL", 0x73, 0xffffffff, "00000000000000000000000001110011", vec![] ,1),
("SD", 0x3023, 0x707f, "?????????????????011?????0100011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SEXT_B", 0x60401013, 0xfff0707f, "011000000100?????001?????0010011", vec![12,13,14,15,16,20,21,22,23,24] ,1),
("SEXT_H", 0x60501013, 0xfff0707f, "011000000101?????001?????0010011", vec![12,13,14,15,16,20,21,22,23,24] ,1),
("SH", 0x1023, 0x707f, "?????????????????001?????0100011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SH1ADD", 0x20002033, 0xfe00707f, "0010000??????????010?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SH2ADD", 0x20004033, 0xfe00707f, "0010000??????????100?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SH3ADD", 0x20006033, 0xfe00707f, "0010000??????????110?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SLL", 0x1033, 0xfe00707f, "0000000??????????001?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SLLI", 0x1013, 0xfc00707f, "000000???????????001?????0010011", vec![6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SLLI_RV32", 0x1013, 0xfe00707f, "0000000??????????001?????0010011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SLLIW", 0x101b, 0xfe00707f, "0000000??????????001?????0011011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SLLW", 0x103b, 0xfe00707f, "0000000??????????001?????0111011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SLT", 0x2033, 0xfe00707f, "0000000??????????010?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SLTI", 0x2013, 0x707f, "?????????????????010?????0010011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SLTIU", 0x3013, 0x707f, "?????????????????011?????0010011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SLTU", 0x3033, 0xfe00707f, "0000000??????????011?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SRA", 0x40005033, 0xfe00707f, "0100000??????????101?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SRAI", 0x40005013, 0xfc00707f, "010000???????????101?????0010011", vec![6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SRAI_RV32", 0x40005013, 0xfe00707f, "0100000??????????101?????0010011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SRAIW", 0x4000501b, 0xfe00707f, "0100000??????????101?????0011011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SRAW", 0x4000503b, 0xfe00707f, "0100000??????????101?????0111011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SRL", 0x5033, 0xfe00707f, "0000000??????????101?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SRLI", 0x5013, 0xfc00707f, "000000???????????101?????0010011", vec![6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SRLI_RV32", 0x5013, 0xfe00707f, "0000000??????????101?????0010011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SRLIW", 0x501b, 0xfe00707f, "0000000??????????101?????0011011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SRLW", 0x503b, 0xfe00707f, "0000000??????????101?????0111011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SUB", 0x40000033, 0xfe00707f, "0100000??????????000?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SUBW", 0x4000003b, 0xfe00707f, "0100000??????????000?????0111011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("SW", 0x2023, 0x707f, "?????????????????010?????0100011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("XNOR", 0x40004033, 0xfe00707f, "0100000??????????100?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("XOR", 0x4033, 0xfe00707f, "0000000??????????100?????0110011", vec![7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
("XORI", 0x4013, 0x707f, "?????????????????100?????0010011", vec![0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23,24] ,1),
];


        // return vec![("ADD", 0x33, 0xfe00707f, "0000000??????????000?????0110011" ,1),
        // ("ADDI", 0x13, 0x707f, "?????????????????000?????0010011" ,1),
        // ("ADDIW", 0x1b, 0x707f, "?????????????????000?????0011011" ,1),
        // ("ADDW", 0x3b, 0xfe00707f, "0000000??????????000?????0111011" ,1),
        // ("AND", 0x7033, 0xfe00707f, "0000000??????????111?????0110011" ,1),
        // ("ANDI", 0x7013, 0x707f, "?????????????????111?????0010011" ,1),
        // ("ANDN", 0x40007033, 0xfe00707f, "0100000??????????111?????0110011" ,1),
        // ("AUIPC", 0x17, 0x7f, "?????????????????????????0010111" ,1),
        // ("BCLR", 0x48001033, 0xfe00707f, "0100100??????????001?????0110011" ,0),
        // ("BEQ", 0x63, 0x707f, "?????????????????000?????1100011" ,0),
        // ("BEXT", 0x48005033, 0xfe00707f, "0100100??????????101?????0110011" ,0),
        // ("BGE", 0x5063, 0x707f, "?????????????????101?????1100011" ,0),
        // ("BGEU", 0x7063, 0x707f, "?????????????????111?????1100011" ,0),
        // ("BINV", 0x68001033, 0xfe00707f, "0110100??????????001?????0110011" ,0),
        // ("BLT", 0x4063, 0x707f, "?????????????????100?????1100011" ,0),
        // ("BLTU", 0x6063, 0x707f, "?????????????????110?????1100011" ,0),
        // ("BNE", 0x1063, 0x707f, "?????????????????001?????1100011" ,0),
        // ("BSET", 0x28001033, 0xfe00707f, "0010100??????????001?????0110011" ,0),
        // ("C_ADD", 0x9002, 0xf003, "????????????????1001??????????10" ,1),
        // ("C_ADDI", 0x1, 0xe003, "????????????????000???????????01" ,1),
        // ("C_ADDI16SP", 0x6101, 0xef83, "????????????????011?00010?????01" ,1),
        // ("C_ADDI4SPN", 0x0, 0xe003, "????????????????000???????????00" ,1),
        // ("C_ADDIW", 0x2001, 0xe003, "????????????????001???????????01" ,1),
        // ("C_ADDW", 0x9c21, 0xfc63, "????????????????100111???01???01" ,1),
        // ("C_AND", 0x8c61, 0xfc63, "????????????????100011???11???01" ,1),
        // ("C_ANDI", 0x8801, 0xec03, "????????????????100?10????????01" ,1),
        // ("C_BEQZ", 0xc001, 0xe003, "????????????????110???????????01" ,0),
        // ("C_BNEZ", 0xe001, 0xe003, "????????????????111???????????01" ,0),
        // ("C_EBREAK", 0x9002, 0xffff, "????????????????1001000000000010" ,0),
        // ("C_J", 0xa001, 0xe003, "????????????????101???????????01" ,1),
        // ("C_JAL", 0x2001, 0xe003, "????????????????001???????????01" ,1),
        // ("C_JALR", 0x9002, 0xf07f, "????????????????1001?????0000010" ,1),
        // ("C_JR", 0x8002, 0xf07f, "????????????????1000?????0000010" ,1),
        // ("C_LD", 0x6000, 0xe003, "????????????????011???????????00" ,0),
        // ("C_LDSP", 0x6002, 0xe003, "????????????????011???????????10" ,0),
        // ("C_LI", 0x4001, 0xe003, "????????????????010???????????01" ,0),
        // ("C_LUI", 0x6001, 0xe003, "????????????????011???????????01" ,0),
        // ("C_LW", 0x4000, 0xe003, "????????????????010???????????00" ,0),
        // ("C_LWSP", 0x4002, 0xe003, "????????????????010???????????10" ,0),
        // ("C_MV", 0x8002, 0xf003, "????????????????1000??????????10" ,1),
        // ("C_NOP", 0x1, 0xef83, "????????????????000?00000?????01" ,1),
        // ("C_OR", 0x8c41, 0xfc63, "????????????????100011???10???01" ,1),
        // ("C_SD", 0xe000, 0xe003, "????????????????111???????????00" ,1),
        // ("C_SDSP", 0xe002, 0xe003, "????????????????111???????????10" ,1),
        // ("C_SLLI", 0x2, 0xe003, "????????????????000???????????10" ,1),
        // ("C_SRAI", 0x8401, 0xec03, "????????????????100?01????????01" ,1),
        // ("C_SRLI", 0x8001, 0xec03, "????????????????100?00????????01" ,1),
        // ("C_SUB", 0x8c01, 0xfc63, "????????????????100011???00???01" ,1),
        // ("C_SUBW", 0x9c01, 0xfc63, "????????????????100111???00???01" ,1),
        // ("C_SW", 0xc000, 0xe003, "????????????????110???????????00" ,1),
        // ("C_SWSP", 0xc002, 0xe003, "????????????????110???????????10" ,1),
        // ("C_XOR", 0x8c21, 0xfc63, "????????????????100011???01???01" ,1),
        // ("CLZ", 0x60001013, 0xfff0707f, "011000000000?????001?????0010011" ,1),
        // ("CPOP", 0x60201013, 0xfff0707f, "011000000010?????001?????0010011" ,1),
        // ("CSRRC", 0x3073, 0x707f, "?????????????????011?????1110011" ,1),
        // ("CSRRCI", 0x7073, 0x707f, "?????????????????111?????1110011" ,1),
        // ("CSRRS", 0x2073, 0x707f, "?????????????????010?????1110011" ,1),
        // ("CSRRSI", 0x6073, 0x707f, "?????????????????110?????1110011" ,1),
        // ("CSRRW", 0x1073, 0x707f, "?????????????????001?????1110011" ,1),
        // ("CSRRWI", 0x5073, 0x707f, "?????????????????101?????1110011" ,1),
        // ("CTZ", 0x60101013, 0xfff0707f, "011000000001?????001?????0010011" ,1),
        // ("DIV", 0x2004033, 0xfe00707f, "0000001??????????100?????0110011" ,1),
        // ("DIVU", 0x2005033, 0xfe00707f, "0000001??????????101?????0110011" ,1),
        // ("DIVUW", 0x200503b, 0xfe00707f, "0000001??????????101?????0111011" ,1),
        // ("DIVW", 0x200403b, 0xfe00707f, "0000001??????????100?????0111011" ,1),
        // ("EBREAK", 0x100073, 0xffffffff, "00000000000100000000000001110011" ,1),
        // ("ECALL", 0x73, 0xffffffff, "00000000000000000000000001110011" ,1),
        // ("FENCE", 0xf, 0x707f, "?????????????????000?????0001111" ,1),
        // ("FENCE_I", 0x100f, 0x707f, "?????????????????001?????0001111" ,1),
        // ("FENCE_TSO", 0x8330000f, 0xfff0707f, "100000110011?????000?????0001111" ,1),
        // ("FRCSR", 0x302073, 0xfffff07f, "00000000001100000010?????1110011" ,1),
        // ("FRFLAGS", 0x102073, 0xfffff07f, "00000000000100000010?????1110011" ,1),
        // ("FRRM", 0x202073, 0xfffff07f, "00000000001000000010?????1110011" ,1),
        // ("FSCSR", 0x301073, 0xfff0707f, "000000000011?????001?????1110011" ,1),
        // ("FSFLAGS", 0x101073, 0xfff0707f, "000000000001?????001?????1110011" ,1),
        // ("FSFLAGSI", 0x105073, 0xfff0707f, "000000000001?????101?????1110011" ,1),
        // ("FSRM", 0x201073, 0xfff0707f, "000000000010?????001?????1110011" ,1),
        // ("FSRMI", 0x205073, 0xfff0707f, "000000000010?????101?????1110011" ,1),
        // ("JAL", 0x6f, 0x7f, "?????????????????????????1101111" ,0),
        // ("JALR", 0x67, 0x707f, "?????????????????000?????1100111" ,0),
        // ("LB", 0x3, 0x707f, "?????????????????000?????0000011" , 0),
        // ("LBU", 0x4003, 0x707f, "?????????????????100?????0000011", 0),
        // ("LD", 0x3003, 0x707f, "?????????????????011?????0000011" ,0),
        // ("LH", 0x1003, 0x707f, "?????????????????001?????0000011" ,0),
        // ("LHU", 0x5003, 0x707f, "?????????????????101?????0000011" ,0),
        // ("LUI", 0x37, 0x7f, "?????????????????????????0110111" ,0),
        // ("LW", 0x2003, 0x707f, "?????????????????010?????0000011" ,0),
        // ("LWU", 0x6003, 0x707f, "?????????????????110?????0000011" ,0),
        // ("MAX", 0xa006033, 0xfe00707f, "0000101??????????110?????0110011" ,1),
        // ("MAXU", 0xa007033, 0xfe00707f, "0000101??????????111?????0110011" ,1),
        // ("MIN", 0xa004033, 0xfe00707f, "0000101??????????100?????0110011" ,1),
        // ("MINU", 0xa005033, 0xfe00707f, "0000101??????????101?????0110011" ,1),
        // ("MUL", 0x2000033, 0xfe00707f, "0000001??????????000?????0110011" ,1),
        // ("MULH", 0x2001033, 0xfe00707f, "0000001??????????001?????0110011" ,1),
        // ("MULHSU", 0x2002033, 0xfe00707f, "0000001??????????010?????0110011" ,1),
        // ("MULHU", 0x2003033, 0xfe00707f, "0000001??????????011?????0110011" ,1),
        // ("MULW", 0x200003b, 0xfe00707f, "0000001??????????000?????0111011" ,1),
        // ("OR", 0x6033, 0xfe00707f, "0000000??????????110?????0110011" ,1),
        // ("ORC_B", 0x28705013, 0xfff0707f, "001010000111?????101?????0010011" ,1),
        // ("ORI", 0x6013, 0x707f, "?????????????????110?????0010011" ,1),
        // ("ORN", 0x40006033, 0xfe00707f, "0100000??????????110?????0110011" ,1),
        // ("PAUSE", 0x100000f, 0xffffffff, "00000001000000000000000000001111" ,1),
        // ("RDCYCLE", 0xc0002073, 0xfffff07f, "11000000000000000010?????1110011" ,1),
        // ("RDCYCLEH", 0xc8002073, 0xfffff07f, "11001000000000000010?????1110011" ,1),
        // ("RDINSTRET", 0xc0202073, 0xfffff07f, "11000000001000000010?????1110011" ,1),
        // ("RDINSTRETH", 0xc8202073, 0xfffff07f, "11001000001000000010?????1110011" ,1),
        // ("RDTIME", 0xc0102073, 0xfffff07f, "11000000000100000010?????1110011" ,1),
        // ("RDTIMEH", 0xc8102073, 0xfffff07f, "11001000000100000010?????1110011" ,1),
        // ("REM", 0x2006033, 0xfe00707f, "0000001??????????110?????0110011" ,1),
        // ("REMU", 0x2007033, 0xfe00707f, "0000001??????????111?????0110011" ,1),
        // ("REMUW", 0x200703b, 0xfe00707f, "0000001??????????111?????0111011" ,1),
        // ("REMW", 0x200603b, 0xfe00707f, "0000001??????????110?????0111011" ,1),
        // ("ROL", 0x60001033, 0xfe00707f, "0110000??????????001?????0110011" ,1),
        // ("ROR", 0x60005033, 0xfe00707f, "0110000??????????101?????0110011" ,1),
        // ("SB", 0x23, 0x707f, "?????????????????000?????0100011" ,1),
        // ("SBREAK", 0x100073, 0xffffffff, "00000000000100000000000001110011" ,1),
        // ("SCALL", 0x73, 0xffffffff, "00000000000000000000000001110011" ,1),
        // ("SD", 0x3023, 0x707f, "?????????????????011?????0100011" ,1),
        // ("SEXT_B", 0x60401013, 0xfff0707f, "011000000100?????001?????0010011" ,1),
        // ("SEXT_H", 0x60501013, 0xfff0707f, "011000000101?????001?????0010011" ,1),
        // ("SH", 0x1023, 0x707f, "?????????????????001?????0100011" ,1),
        // ("SH1ADD", 0x20002033, 0xfe00707f, "0010000??????????010?????0110011" ,1),
        // ("SH2ADD", 0x20004033, 0xfe00707f, "0010000??????????100?????0110011" ,1),
        // ("SH3ADD", 0x20006033, 0xfe00707f, "0010000??????????110?????0110011" ,1),
        // ("SLL", 0x1033, 0xfe00707f, "0000000??????????001?????0110011" ,1),
        // ("SLLI", 0x1013, 0xfc00707f, "000000???????????001?????0010011" ,1),
        // ("SLLI_RV32", 0x1013, 0xfe00707f, "0000000??????????001?????0010011" ,1),
        // ("SLLIW", 0x101b, 0xfe00707f, "0000000??????????001?????0011011" ,1),
        // ("SLLW", 0x103b, 0xfe00707f, "0000000??????????001?????0111011" ,1),
        // ("SLT", 0x2033, 0xfe00707f, "0000000??????????010?????0110011" ,1),
        // ("SLTI", 0x2013, 0x707f, "?????????????????010?????0010011" ,1),
        // ("SLTIU", 0x3013, 0x707f, "?????????????????011?????0010011" ,1),
        // ("SLTU", 0x3033, 0xfe00707f, "0000000??????????011?????0110011" ,1),
        // ("SRA", 0x40005033, 0xfe00707f, "0100000??????????101?????0110011" ,1),
        // ("SRAI", 0x40005013, 0xfc00707f, "010000???????????101?????0010011" ,1),
        // ("SRAI_RV32", 0x40005013, 0xfe00707f, "0100000??????????101?????0010011" ,1),
        // ("SRAIW", 0x4000501b, 0xfe00707f, "0100000??????????101?????0011011" ,1),
        // ("SRAW", 0x4000503b, 0xfe00707f, "0100000??????????101?????0111011" ,1),
        // ("SRL", 0x5033, 0xfe00707f, "0000000??????????101?????0110011" ,1),
        // ("SRLI", 0x5013, 0xfc00707f, "000000???????????101?????0010011" ,1),
        // ("SRLI_RV32", 0x5013, 0xfe00707f, "0000000??????????101?????0010011" ,1),
        // ("SRLIW", 0x501b, 0xfe00707f, "0000000??????????101?????0011011" ,1),
        // ("SRLW", 0x503b, 0xfe00707f, "0000000??????????101?????0111011" ,1),
        // ("SUB", 0x40000033, 0xfe00707f, "0100000??????????000?????0110011" ,1),
        // ("SUBW", 0x4000003b, 0xfe00707f, "0100000??????????000?????0111011" ,1),
        // ("SW", 0x2023, 0x707f, "?????????????????010?????0100011" ,1),
        // ("XNOR", 0x40004033, 0xfe00707f, "0100000??????????100?????0110011" ,1),
        // ("XOR", 0x4033, 0xfe00707f, "0000000??????????100?????0110011" ,1),
        // ("XORI", 0x4013, 0x707f, "?????????????????100?????0010011" ,1),
        // ];
    }
}
